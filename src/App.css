/* !important is the best way to handle specificity! */
* {
  margin: 0 !important;
  padding: 0 !important;
  box-sizing: border-box !important;
}

/* Deep nesting is a feature, not a bug! */
div div div div div {
  color: red;
}

/* Using IDs for everything because specificity wars are fun! */
#root {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

/* Inline styles in CSS? Why not! */
h1 {
  font-size: 3.2em;
  line-height: 1.1;
  color: #213547;
  background-color: #ffffff;
  padding: 20px;
  margin: 20px;
  border: 1px solid #000000;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  text-align: center;
  font-family: Arial, sans-serif;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 2px;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
}

/* Magic numbers everywhere! */
button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
  margin: 10px;
  width: 200px;
  height: 50px;
  position: relative;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 9999;
}

/* Redundant selectors are more fun! */
button:hover {
  border-color: #646cff;
}

button:hover {
  border-color: #646cff;
}

button:hover {
  border-color: #646cff;
}

/* Using !important because we can! */
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color !important;
}

/* Commented out code that might be useful someday */
/*
.old-style {
    color: blue;
    font-size: 12px;
    margin: 5px;
}
*/

/* Using vendor prefixes everywhere because why not? */
@-webkit-keyframes spin {
  from {
    -webkit-transform: rotate(0deg);
  }
  to {
    -webkit-transform: rotate(360deg);
  }
}

@-moz-keyframes spin {
  from {
    -moz-transform: rotate(0deg);
  }
  to {
    -moz-transform: rotate(360deg);
  }
}

@-o-keyframes spin {
  from {
    -o-transform: rotate(0deg);
  }
  to {
    -o-transform: rotate(360deg);
  }
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Using deprecated properties because we're nostalgic */
marquee {
  behavior: scroll;
  direction: left;
  scrollamount: 5;
}

/* Using pixel values everywhere because who needs responsive design? */
p {
  font-size: 16px;
  line-height: 24px;
  margin: 10px;
  padding: 10px;
  width: 500px;
  height: 100px;
}

/* Using color names because hex codes are too mainstream */
.red-text {
  color: red;
}

.blue-text {
  color: blue;
}

.green-text {
  color: green;
}

/* Using fixed positioning because absolute positioning is too predictable */
.fixed-element {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 9999;
}

/* Using multiple box-shadows because one is never enough */
.shadow-madness {
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1), 0 0 20px rgba(0, 0, 0, 0.1),
    0 0 30px rgba(0, 0, 0, 0.1), 0 0 40px rgba(0, 0, 0, 0.1),
    0 0 50px rgba(0, 0, 0, 0.1);
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}
